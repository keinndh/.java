/**
 * Models the systemâ€™s end-users, including both guests and possibly administrators or staff
 * It stores user credentials, personal information, and session-related data.
 * The class also provides methods for authentication, profile updates, and managing the user's interaction history within the system.
 * @author Rica Mae H. Mod
 * @version 1 - April 29, 2025
 */

package hotelreservation;

import java.util.Random;

public class User {
    private String userId; // Unique identifier for the user
    private String name; // User's name
    private String email; // User's email address
    private String phone; // User's phone number
    private String password; // User's password

    // Constructor to initialize User user's ID
    public User() {
        this.userId = generateUserID();
    }

    // Method to register a user
    public void create() {
        System.out.println("Successfully created an account.");
    }

    // Method to log in a user
    public void login() {
        System.out.println("Logged in successfully.");
    }

    // Method to view user profile
    public void viewProfile() {
        System.out.println("Profile Information:");
        System.out.println("ID: " + getUserID());
        System.out.println("Name: " + name);
        System.out.println("Email: " + email);
        System.out.println("Phone: " + phone);
    }
    
    // Method to view guess profile
    public void guessProfile() {
        System.out.println("Profile Information:");
        System.out.println("ID: " + null);
        System.out.println("Name: " + name);
        System.out.println("Email: " + email);
        System.out.println("Phone: " + phone);
    }

    // Method to update user profile
    public void updateProfile() {
        System.out.println("\nProfile updated successfully.");
    }

    // Static method to generate a random user ID
    public static String generateUserID() {
        int userId = new Random().nextInt(9000) + 1000; // Generate a random 4-digit number
        return String.valueOf(userId); // Convert the number to a string
    }
    
    // Getters and setters for all attributes
    public String getUserID() {
        return userId;
    }

    public String getName() {
        return name;
    }

    public void setName(String name) {
        this.name = name;
    }

    public String getEmail() {
        return email;
    }

    public void setEmail(String email) {
        this.email = email;
    }

    public String getPhone() {
        return phone;
    }

    public void setPhone(String phone) {
        this.phone = phone;
    }
	
    public String getPassword() {
		return password;
    }
	
    public void setPassword(String password) {
		this.password = password;
    }
}